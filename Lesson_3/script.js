//             0    1       2      3        4
// const array = [1, 'Hello', null, true, [1, 2, 3]];
//             1    2       3      4        5
// console.log(typeof array);
// console.log(Array.isArray(array));
// Array.isArray(array) - –ø–æ–≤–µ—Ä—Ç–∞—î true/false –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ —á–∏ –º–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ –º–∞—Å–∏–≤–æ–º —á–∏ –Ω—ñ
// console.log(array[3]);
// const first = array[0];
// console.log(first);
// const last = array[array.length - 1];
// console.log(array.length);
// console.log(last);

// for (let i = 0; i < array.length; i += 1) {
//     const item = array[i];
//     if (Array.isArray(item)) {
//         for (let j = 0; j < item.length; j+=1){
//             console.log(item[j]);
//         }
//         continue;
//     }
//     console.log(array[i]);
// }
// const array = [1, 'Hello', null, true, [1, 2, 3]];

// for(let item of array){
//     // console.log(item);
//     if(typeof item === 'string'){
//         item = false
//     }
// }
// console.log('for of',array);

// for(let i = 0; i< array.length; i+=1){
//     if(typeof array[i] === 'string'){
//         array[i] =false;
//     }
// }
// console.log('for',array);



// const array = [1, 'Hello', null, true, [1, 2, 3]];

// let i = 0;
// while (i < array.length) {
//     if (typeof array[i] === 'string') {
//         array[i] = false;
//     }
//     i += 1;
// }

// console.log(array);


// 

// let value = 1;
// let test = value;
// value='hello';

// console.log('value',value);
// console.log('test',test);



// const array = [1, 2, 3, 4, 5];
// const copy = array;
// array.push(6, 7);
// copy.push(8,9)
// console.log(array === copy);
// console.log(array);
// console.log(copy);


// console.log(1 === 1);
// console.log('hello' === 'hello');
// console.log([1, 2, 3] === [1, 2, 3]);


// let number = 1;
// number +=15;
// console.log(number);


// let array = [1, 2, 3];
// // array ='string';

// array.push(4)
// // array.pop();
// // array.length = 10;
// console.log(array);

// –ü–µ—Ä–µ—Ä–≤–∞ –¥–æ 21.00


// 
// const str = 'Hello world I`m learning JS';
// const arr = str.split('-');
// console.log(arr);

// // const result = arr.reverse().join(' ')


// const result = str.split(' ').reverse().join(' ')
// console.log(str);
// // console.log(arr);
// console.log(result);





// const arr = ['hello', 'wolrd'];
// const idx = arr.indexOf('wolrd');

// if (arr.indexOf('wolrd') === -1) {
//     console.log("NO");
// } else {
//     console.log('yes');
// }
// console.log(idx);
// console.log(arr.includes('wolrd'));

// if (arr.includes('wolrd')) {
//     console.log('YES');
// } else {
//     console.log('NO');
// }
//      3           4
// const arr = ['hello', 'wolrd'];
// push pop
// arr.push(1, 'a',[1,2])
// arr.pop()
// arr.pop()
// arr.pop()
// console.log(arr);

// shift unshift

//      0   1      2
// arr.unshift(1, 'a', [1, 2])
// // arr.shift();
// // arr.shift();
// // arr.shift();
// // console.log(arr);

// // slice
// const result = arr.slice(1,3);
// console.log('result',result);
// console.log('arr',arr);

// const arr = ['hello', 'world', 'js'];
// // splice

// // arr.splice(1, 1, 'from', 'react', 'node')
// // console.log(arr);
// const idx = arr.indexOf('world');
// const result = arr.splice(idx, 1, 'from')
// console.log(arr);
// console.log('result',result);


// concat

// const arr = [1, 2, 3];
// const arr1 = [4, 5];
// const arr2 = [6, 7];
// const result = arr2.concat(arr, arr1)
// console.log(arr);
// console.log(result);


// -----------------------------------//

// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
// –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// const genres = ['Jazz', 'Blues'];
// genres.push('–†–æ–∫-–Ω-—Ä–æ–ª');
// console.log(genres.shift());
// genres.unshift('Country', 'Reggae')
// console.log(genres);
// console.log(genres[genres.length - 1]);
// const genres = ['Jazz', 'Blues'];
// genres.splice(genres.length, 0, '–†–æ–∫-–Ω-—Ä–æ–ª');
// console.log(genres.splice(0, 1, 'Country', 'Reggae'));
// console.log(genres);

// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// const values = '8 11';
// const arr = values.split(' ');
// const first = Number(arr[0]);
// const last = Number(arr[arr.length - 1]);
// const result = first * last;
// console.log(result);


// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];

// for (let i = 0; i < fruits.length; i += 1) {
//     console.log(`${i + 1} - ${fruits[i]}`);
// }

// for (let i = 0, n = 1; i < fruits.length; i += 1, n+=1) {
//     console.log(`${n} - ${fruits[i]}`);
// }


// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// let names = 'Jacob,William,Solomon,Artem';
// let phones = '89001234567,89001112233,890055566377';
// names = names.split(',');
// phones = phones.split(',');
// for (let i = 0; i < names.length, i < phones.length; i += 1){
//     console.log(`${names[i]} - ${phones[i]}`);
// }


// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = 'Welcome to the future';

// arr.pop();
// arr.shift();

// const result = arr.join(' ');
// console.log(result);

// const result = string.split(' ').slice(1, -1).join(' ');

// console.log(result);

// const arr = string.split(' ');
// const test = arr.push('1234')
// console.log(test);
// console.log(arr);

// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = 'Welcome to the future';
// const result = string.split('').reverse().join('');
// console.log(result);


// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ['cpython', 'bjavascript', 'ac++', 'haskel', 'php', 'ruby'];

// for (let i = 0; i < langs.length; i += 1) {
//     if (langs[0] > langs[i]) {
//         const result = langs.splice(i,1)[0];
//         langs.unshift(result)
//     }
// }
// console.log(langs);






// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.

// const numbers = [94, 2, 17, 94, 1, 23, 37];
// let min = numbers[0]; // undefined
// for (const value of numbers) {
//     if (value < min) {
//         min = value;
//     }
// }
// console.log(min); // 1

// const arr = [1, 2, 3] + [4, 5];
// console.log(arr);
// let x = 7;
// let y = null;
// let a = 9;

// console.log(a || x && y);